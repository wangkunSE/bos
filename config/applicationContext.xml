<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<context:property-placeholder location="classpath:jdbc.properties"/>
	<!-- 数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${driverClass}"></property>
		<property name="jdbcUrl" value="${jdbcUrl}"></property>
		<property name="user" value="${user}"></property>
		<property name="password" value="${password}"></property>
	</bean>
	<!-- spring框架整合Hibernate的工厂bean -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<property name="mappingDirectoryLocations">
			<list>
			<!-- bos.sshproject.domin -->
				<value>classpath:bos/sshproject/*/domain</value>
			</list>
		</property>
		
	</bean>
	
	<!-- 事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 组件扫描 -->
	<context:component-scan base-package="bos.sshproject"></context:component-scan>
	<!-- 引入注解解析器 -->
	<context:annotation-config/>
	<!-- 事务注解 -->
	<tx:annotation-driven/>	
	
		<!-- 配置远程服务的代理对象 -->
	<bean id="customerService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
		<property name="serviceInterface" value="bos.sshproject.crm.CustomerService"/>
		<property name="serviceUrl" value="http://localhost:8081/crm/remoting/customer"/>
	</bean>
	
	<!-- 工厂bean，用于创建shiro框架 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"></property>
		<!-- 注入当前系统的登录界面 -->
		<property name="loginUrl" value="/login.jsp"></property>
		<!-- 注入成功界面 -->
		<property name="successUrl" value="/index.jsp"></property>
		<!-- 注入当前系统的登录界面 -->
		<property name="unauthorizedUrl" value="/404.html"></property>
		<!-- 注入url拦截规则 -->
		<property name="filterChainDefinitions">
			<value>
				/css/** = anon
				/js/** = anon
				/images/** = anon
				/validatecode.jsp* = anon
				/login.jsp* = anon
				/userAction_login = anon
				/page_base_staff.action = perms["staff"]
				/* = authc
			</value>
		</property>
	</bean>
	
	<bean id="bosRealm" class="bos.sshproject.authority.realm.BOSrealm"></bean>
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="bosRealm"></property>
		<!-- 注入缓存管理器 -->
		<property name="cacheManager" ref="cacheManager"></property>
	</bean>
	<!-- 注册缓存管理器 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<!-- 注入ecache配置文件 -->
		<property name="cacheManagerConfigFile" value="classpath:ehcache.xml"></property>
	</bean>
	
	<!-- 开启shiro注解 -->
	<!-- 自动代理 -->
	<bean id="defaultAdvisorAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
		<!-- 强制使用cglib为action创建代理对象 -->
		<property name="proxyTargetClass" value="true"></property>
	</bean>
	
	<!-- 切面类 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"></bean>
	
	
	<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<!-- 注入数据源 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 注入事务管理器对象 -->
		<property name="transactionManager" ref="transactionManager"/>
		<property name="databaseSchemaUpdate" value="true" />
	</bean>

	<!-- 使用工厂创建流程引擎对象 -->
	<bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
		<property name="processEngineConfiguration" ref="processEngineConfiguration" />
	</bean>
</beans>
